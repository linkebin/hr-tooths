2019-3-25 09:17:34 main INFO The following profiles are active: dev
2019-3-25 09:17:48 main DEBUG ==>  Preparing: SELECT * FROM sec_menu sm where deleted=0 AND sm.STANBY_ID1 = '2' ORDER BY SORT 
2019-3-25 09:17:48 main DEBUG ==> Parameters: 
2019-3-25 09:17:49 main DEBUG <==      Total: 48
2019-3-25 09:17:58 localhost-startStop-1 INFO JedisPool注入成功！！
2019-3-25 09:17:58 localhost-startStop-1 INFO redis地址：localhost:6379
2019-3-25 09:18:16 main INFO Started BaseFrameApplication in 51.632 seconds (JVM running for 55.101)
2019-3-25 09:20:56 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 09:20:56 http-nio-8081-exec-1 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 09:20:56 http-nio-8081-exec-1 DEBUG <==      Total: 26
2019-3-25 09:20:57 http-nio-8081-exec-2 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 09:20:57 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 09:20:57 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:20:57 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 09:20:57 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:20:57 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 09:20:57 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:20:57 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:20:59 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-50' limit 1 
2019-3-25 09:20:59 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:20:59 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:21:00 http-nio-8081-exec-9 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:21:00 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 09:21:00 http-nio-8081-exec-9 DEBUG <==      Total: 7
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 09:21:00 http-nio-8081-exec-10 DEBUG <==      Total: 10
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG <==      Total: 3
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:01 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:21:06 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 09:21:06 http-nio-8081-exec-4 DEBUG ==> Parameters: RK(String)
2019-3-25 09:21:06 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:21:06 http-nio-8081-exec-5 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:21:06 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000002(String)
2019-3-25 09:21:06 http-nio-8081-exec-3 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:21:06 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:21:06 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:21:06 http-nio-8081-exec-3 DEBUG <==      Total: 7
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000002(String)
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG <==      Total: 0
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000002(String)
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG <==      Total: 10
2019-3-25 09:21:06 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 09:21:06 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 09:21:22 http-nio-8081-exec-10 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:21:22 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:21:22 http-nio-8081-exec-10 DEBUG <==      Total: 7
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 09:21:22 http-nio-8081-exec-1 DEBUG <==      Total: 10
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG ==>  Preparing: select t.* from ( select a.batch_id,a.in_out_code,a.p_name,a.p_type,a.p_model,a.p_spe,a.p_unit,a.p_brand,a.end_time,a.money,a.allowance,a.num,a.cost,a.in_out_de_id,a.remark from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M003525%') ) t order by t.end_time,t.in_out_code LIMIT 10 OFFSET 0 
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String), M003525(String)
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG <==      Total: 0
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from ( select a.batch_id from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M003525%') ) t 
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String), M003525(String)
2019-3-25 09:21:23 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG <==      Total: 3
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String)
2019-3-25 09:21:38 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from ( select in_out_de_id,in_out_code,clinic_id,p_name,type_id,p_type,p_model,p_spe,price,case when num < 0 then -num else num end num,p_brand,p_unit, case when money < 0 then -money else money end money,remark,end_time,user_name,user_id,create_time,batch_id,operation_type,order_id,cost from stock_in_out_de where order_id = ? order by in_out_code) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG ==> Parameters: M1550630564881(String)
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from stock_in_out_de where order_id = ? order by in_out_code 
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG ==> Parameters: M1550630564881(String)
2019-3-25 09:21:39 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:21:46 http-nio-8081-exec-9 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 09:21:46 http-nio-8081-exec-9 DEBUG ==> Parameters: RK(String)
2019-3-25 09:21:46 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:21:46 http-nio-8081-exec-8 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:21:46 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:21:46 http-nio-8081-exec-8 DEBUG <==      Total: 7
2019-3-25 09:21:46 http-nio-8081-exec-10 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:21:46 http-nio-8081-exec-10 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:21:46 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG <==      Total: 10
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 09:21:47 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG <==      Total: 0
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:21:47 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG <==      Total: 0
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:21:54 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') 
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:21:54 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from stock_product where product_code = ? 
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG ==> Parameters: M004129(String)
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from items_temporary where order_id='RK000003' and code = 'M004129' limit 1 
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:22:09 http-nio-8081-exec-8 DEBUG <==      Total: 0
2019-3-25 09:22:10 http-nio-8081-exec-8 DEBUG ==>  Preparing: INSERT INTO items_temporary ( ID,batch,code,name,type_id,type,model,specifications,brand,inventory_num,inventory_cost,validity,retail_price,money,remark,order_id,unit ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:22:10 http-nio-8081-exec-8 DEBUG ==> Parameters: 91b1894a-b3b2-4471-acdc-a422a6a25b9d(String), RK000003(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), (String), 12(Integer), 0.0(Double), 2020-09-23 00:00:00.0(Timestamp), 0.0(Double), 0.0(Double),  12(String), RK000003(String), (String)
2019-3-25 09:22:10 http-nio-8081-exec-8 DEBUG <==    Updates: 1
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') ) t LIMIT 10 OFFSET 0 
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') 
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:22:10 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:10 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:22:10 http-nio-8081-exec-2 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:22:10 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:10 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG ==>  Preparing: INSERT INTO stock_in_out ( in_out_id,in_out_code,in_out_time,creator_id,creator,money,num,in_obj,out_obj,type,state,clinic_id ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG ==> Parameters: 7173aef4-2130-4147-a4b8-74d771a17957(String), RK000003(String), 2019-03-25 09:22:12.411(Timestamp), 1(String), admin(String), 0.0(Double), 12(Integer), 总部(String), 服务商(String), 进货(String), 0.0(Double), 122(String)
2019-3-25 09:22:12 http-nio-8081-exec-3 DEBUG <==    Updates: 1
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG <==      Total: 4
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:12 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG <==      Total: 4
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:14 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from ( select code inOutCode,name pName,model pModel,specifications pSpe,brand pBrand,sum(inventory_num) num,batch batchId,unit pUnit,remark, validity endTime,sum(money) money,retail_price price,inventory_cost cost from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity,remark,unit) t LIMIT 5 OFFSET 0 
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) from ( select code from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity ) t 
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:15 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from stock_audit where in_out_id='7173aef4-2130-4147-a4b8-74d771a17957' limit 1 
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG <==      Total: 0
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==>  Preparing: INSERT INTO stock_audit ( audit_id,in_out_id,user_id,user_name,audit_time,remark,is_pass ) VALUES( ?,?,?,?,?,?,? ) 
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==> Parameters: 7fdf1319-585a-4fa8-bea8-a6321ce2df57(String), 7173aef4-2130-4147-a4b8-74d771a17957(String), 1(String), admin(String), 2019-03-25 09:22:17.059(Timestamp), (String), 1(Integer)
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG <==    Updates: 1
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==>  Preparing: select batch,code,name,type_id,type,model,specifications,brand,inventory_cost,validity,retail_price,remark,unit,sum(inventory_num) inventory_num, sum(money) money from items_temporary where order_id = ? group by batch,code,name,type_id,type,model,specifications,brand,inventory_cost,validity,retail_price,remark,unit 
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==> Parameters: RK000003(String)
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==>  Preparing: INSERT INTO stock_in_out_de ( in_out_de_id,clinic_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,p_unit,price,num,p_brand,money,remark,end_time,user_name,user_id,create_time,batch_id,operation_type,order_id,cost,allowance ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG ==> Parameters: 9bc775b1-97f6-4a9f-9cf0-a570265337d1(String), 122(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), (String), 0.0(Double), 12(Integer), (String), 0.0(Double),  12(String), 2020-09-23 00:00:00.0(Timestamp), admin(String), 1(String), 2019-03-25 09:22:17.078(Timestamp), RK000003(String), 进货(String), RK000003(String), 0.0(Double), 12(Integer)
2019-3-25 09:22:17 http-nio-8081-exec-8 DEBUG <==    Updates: 1
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG <==      Total: 4
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:17 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG <==      Total: 4
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:20 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: select * from stock_in_out where in_out_code = ? and clinic_id = ? 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000003(String), 122(String)
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: UPDATE stock_in_out SET in_out_code = ?,in_out_time = ?,creator_id = ?,creator = ?,money = ?,num = ?,in_obj = ?,out_obj = ?,type = ?,state = ?,clinic_id = ? WHERE in_out_id = ? 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000003(String), 2019-03-25 09:22:12.0(Timestamp), 1(String), admin(String), 0.0(Double), 12(Integer), 总部(String), 服务商(String), 进货(String), 1.0(Double), 122(String), 7173aef4-2130-4147-a4b8-74d771a17957(String)
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==    Updates: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: select order_id,batch_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,price,p_brand,cost,operation_type,p_unit,sum(num) num,sum(money) money from stock_in_out_de where order_id = ? and clinic_id = ? group by order_id,batch_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,price,p_brand,cost,operation_type,p_unit 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000003(String), 122(String)
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: select * from stock where clinic_id = ? and product_code = ? 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: select * from stock_product where product_code = 'M004129' limit 1 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==>  Preparing: UPDATE stock SET clinic_id = ?,product_type = ?,product_code = ?,product_name = ?,product_model = ?,product_spec = ?,product_brand = ?,product_unit = ?,type_id = ?,stock_num = ?,end_time = ?,sprice = ?,money = ? WHERE stock_id = ? 
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String), 耗材(String), M004129(String), 达雅鼎牙胶尖(String), (String), 35#（绿）；2锥度(String), (String), (String), CD000260(String), 13(Integer), 2019-02-20 10:34:41.0(Timestamp), 0(String), 0.0(Double), 721b70d6-ed66-4f5b-a1fe-336496ad833a(String)
2019-3-25 09:22:21 http-nio-8081-exec-3 DEBUG <==    Updates: 1
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG <==      Total: 4
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:21 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:22:22 http-nio-8081-exec-6 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:22:22 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 09:22:22 http-nio-8081-exec-6 DEBUG <==      Total: 7
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 09:22:22 http-nio-8081-exec-5 DEBUG <==      Total: 10
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0 AND (product_name LIKE '%M004129%' OR product_code LIKE '%M004129%')) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String)
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 and (product_name like '%M004129%' or product_code like '%M004129%') ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 09:22:26 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.* from ( select a.batch_id,a.in_out_code,a.p_name,a.p_type,a.p_model,a.p_spe,a.p_unit,a.p_brand,a.end_time,a.money,a.allowance,a.num,a.cost,a.in_out_de_id,a.remark from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M004129%') ) t order by t.end_time,t.in_out_code LIMIT 10 OFFSET 0 
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG <==      Total: 2
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from ( select a.batch_id from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M004129%') ) t 
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 09:22:35 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG <==      Total: 4
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:23:20 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:23:22 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 09:23:22 http-nio-8081-exec-2 DEBUG ==> Parameters: RK(String)
2019-3-25 09:23:22 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:23:22 http-nio-8081-exec-3 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:23:22 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:23:22 http-nio-8081-exec-3 DEBUG <==      Total: 7
2019-3-25 09:23:22 http-nio-8081-exec-4 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:23:22 http-nio-8081-exec-4 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:22 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG <==      Total: 10
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 09:23:22 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG <==      Total: 0
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:22 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') 
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 09:23:25 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG <==      Total: 0
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:25 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from stock_product where product_code = ? 
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==> Parameters: M004129(String)
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from items_temporary where order_id='RK000004' and code = 'M004129' limit 1 
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG <==      Total: 0
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==>  Preparing: INSERT INTO items_temporary ( ID,batch,code,name,type_id,type,model,specifications,brand,inventory_num,inventory_cost,validity,retail_price,money,remark,order_id,unit ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG ==> Parameters: 0fa2cbff-5de0-4f26-adfd-aadb32b7d6a1(String), RK000004(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), (String), 100(Integer), 0.0(Double), 2020-09-23 00:00:00.0(Timestamp), 0.0(Double), 0.0(Double),  测试备注 (String), RK000004(String), (String)
2019-3-25 09:23:57 http-nio-8081-exec-8 DEBUG <==    Updates: 1
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 and (product_code like '%M004129%' or product_name like '%M004129%') 
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:23:57 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:57 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:23:57 http-nio-8081-exec-2 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:23:57 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:57 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG ==>  Preparing: INSERT INTO stock_in_out ( in_out_id,in_out_code,in_out_time,creator_id,creator,money,num,in_obj,out_obj,type,state,clinic_id ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG ==> Parameters: c27c6132-783a-4108-85d2-0fbed9b959bd(String), RK000004(String), 2019-03-25 09:23:59.703(Timestamp), 1(String), admin(String), 0.0(Double), 100(Integer), 总部(String), 服务商(String), 进货(String), 0.0(Double), 122(String)
2019-3-25 09:23:59 http-nio-8081-exec-3 DEBUG <==    Updates: 1
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG <==      Total: 5
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 09:23:59 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from ( select code inOutCode,name pName,model pModel,specifications pSpe,brand pBrand,sum(inventory_num) num,batch batchId,unit pUnit,remark, validity endTime,sum(money) money,retail_price price,inventory_cost cost from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity,remark,unit) t LIMIT 10 OFFSET 0 
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from ( select code from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity ) t 
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:24:02 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:25:02 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 09:25:02 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 09:25:02 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG <==      Total: 2
2019-3-25 09:25:02 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 09:25:02 http-nio-8081-exec-10 DEBUG <==      Total: 2
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,b.org_name,c.user_name,c.audit_time,c.remark ,case when b.state = 0.5 then '已发送' when c.is_pass is null then '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id,b.org_name from stock_in_out a,sec_org b where a.clinic_id = b.id_ and a.type != '领用' and a.type != '退领' order by a.state,a.in_out_time desc) t ) b left join stock_audit c on b.in_out_id = c.in_out_id where c.is_pass is null or b.state = 0.5 order by b.in_out_time desc,b.state limit ?,? 
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG ==> Parameters: 0(Integer), 10(Integer)
2019-3-25 09:25:03 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:44:25 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 09:44:25 http-nio-8081-exec-4 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 09:44:25 http-nio-8081-exec-4 DEBUG <==      Total: 26
2019-3-25 09:44:26 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 09:44:26 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 09:44:26 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG <==      Total: 2
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 09:44:26 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:44:26 http-nio-8081-exec-7 DEBUG <==      Total: 2
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,b.org_name,c.user_name,c.audit_time,c.remark ,case when b.state = 0.5 then '已发送' when c.is_pass is null then '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id,b.org_name from stock_in_out a,sec_org b where a.clinic_id = b.id_ and a.type != '领用' and a.type != '退领' order by a.state,a.in_out_time desc) t ) b left join stock_audit c on b.in_out_id = c.in_out_id where c.is_pass is null or b.state = 0.5 order by b.in_out_time desc,b.state limit ?,? 
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG ==> Parameters: 0(Integer), 10(Integer)
2019-3-25 09:44:26 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:44:28 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-50' limit 1 
2019-3-25 09:44:28 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 09:44:28 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 09:44:28 http-nio-8081-exec-10 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:44:28 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 09:44:28 http-nio-8081-exec-10 DEBUG <==      Total: 7
2019-3-25 09:44:28 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 09:44:28 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 09:44:28 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:44:28 http-nio-8081-exec-1 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 09:44:28 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 09:44:29 http-nio-8081-exec-1 DEBUG <==      Total: 10
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG <==      Total: 5
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 09:44:29 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG ==>  Preparing: select * from ( select code inOutCode,name pName,model pModel,specifications pSpe,brand pBrand,sum(inventory_num) num,batch batchId,unit pUnit,remark, validity endTime,sum(money) money,retail_price price,inventory_cost cost from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity,remark,unit) t LIMIT 10 OFFSET 0 
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from ( select code from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity ) t 
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000004(String)
2019-3-25 09:44:31 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:44:41 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 09:44:41 http-nio-8081-exec-4 DEBUG ==> Parameters: RK(String)
2019-3-25 09:44:41 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:44:41 http-nio-8081-exec-6 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 09:44:41 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 09:44:41 http-nio-8081-exec-6 DEBUG <==      Total: 7
2019-3-25 09:44:41 http-nio-8081-exec-7 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:44:41 http-nio-8081-exec-7 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:44:41 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG <==      Total: 10
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG <==      Total: 0
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 09:44:42 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:44:42 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from stock_product where product_code = ? 
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==> Parameters: M004129(String)
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from items_temporary where order_id='RK000005' and code = 'M004129' limit 1 
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG <==      Total: 0
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==>  Preparing: INSERT INTO items_temporary ( ID,batch,code,name,type_id,type,model,specifications,brand,inventory_num,inventory_cost,validity,retail_price,money,remark,order_id,unit ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG ==> Parameters: 7057230a-c307-494b-b632-b32f2a4f8be4(String), RK000005(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), (String), 100(Integer), 0.0(Double), 2020-09-23 00:00:00.0(Timestamp), 0.0(Double), 0.0(Double),  rm(String), RK000005(String), (String)
2019-3-25 09:45:54 http-nio-8081-exec-1 DEBUG <==    Updates: 1
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG <==      Total: 10
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 09:45:54 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:45:54 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 09:45:54 http-nio-8081-exec-4 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 09:45:54 http-nio-8081-exec-4 DEBUG ==> Parameters: RK000005(String)
2019-3-25 09:45:54 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 09:46:33 main INFO The following profiles are active: dev
2019-3-25 09:46:40 main DEBUG ==>  Preparing: SELECT * FROM sec_menu sm where deleted=0 AND sm.STANBY_ID1 = '2' ORDER BY SORT 
2019-3-25 09:46:40 main DEBUG ==> Parameters: 
2019-3-25 09:46:40 main DEBUG <==      Total: 48
2019-3-25 09:46:44 localhost-startStop-1 INFO JedisPool注入成功！！
2019-3-25 09:46:44 localhost-startStop-1 INFO redis地址：localhost:6379
2019-3-25 09:46:54 main INFO Started BaseFrameApplication in 26.466 seconds (JVM running for 28.375)
2019-3-25 10:12:42 main INFO The following profiles are active: dev
2019-3-25 10:12:48 main DEBUG ==>  Preparing: SELECT * FROM sec_menu sm where deleted=0 AND sm.STANBY_ID1 = '2' ORDER BY SORT 
2019-3-25 10:12:49 main DEBUG ==> Parameters: 
2019-3-25 10:12:49 main DEBUG <==      Total: 48
2019-3-25 10:12:57 localhost-startStop-1 INFO JedisPool注入成功！！
2019-3-25 10:12:57 localhost-startStop-1 INFO redis地址：localhost:6379
2019-3-25 10:13:12 main INFO Started BaseFrameApplication in 36.097 seconds (JVM running for 39.074)
2019-3-25 10:17:29 main INFO The following profiles are active: dev
2019-3-25 10:17:46 main DEBUG ==>  Preparing: SELECT * FROM sec_menu sm where deleted=0 AND sm.STANBY_ID1 = '2' ORDER BY SORT 
2019-3-25 10:17:46 main DEBUG ==> Parameters: 
2019-3-25 10:17:46 main DEBUG <==      Total: 48
2019-3-25 10:17:53 localhost-startStop-1 INFO JedisPool注入成功！！
2019-3-25 10:17:53 localhost-startStop-1 INFO redis地址：localhost:6379
2019-3-25 10:18:07 main INFO Started BaseFrameApplication in 44.119 seconds (JVM running for 46.078)
2019-3-25 10:18:24 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 10:18:24 http-nio-8081-exec-2 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 10:18:24 http-nio-8081-exec-2 DEBUG <==      Total: 26
2019-3-25 10:18:24 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 10:18:24 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 10:18:24 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:18:25 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:18:25 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 10:18:25 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 10:18:25 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 10:18:26 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:18:26 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 10:18:26 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 10:18:26 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 10:18:26 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:18:26 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 10:18:26 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 10:18:26 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:18:26 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 10:18:26 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 10:18:26 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 10:18:28 http-nio-8081-exec-6 DEBUG <==      Total: 5
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG ==>  Preparing: select t.* from ( select a.yy_id,a.yy_code,a.yy_time,a.yy_date,a.yy_cust_name,a.yy_cust_sex,a.yy_cust_tel, c.ORG_NAME yy_clinic,b.USER_NAME yy_doctor,a.yy_project,a.yy_source,a.remark,a.yy_age,a.create_time from yy_manage a,sec_user b,sec_org c where a.yy_doctor = b.ID_ and a.yy_clinic = c.ID_ and b.deleted = 0 and date_format(a.yy_date,'%Y-%m-%d') >= ? and ? >= date_format(a.yy_date,'%Y-%m-%d') ) t order by t.yy_date desc, t.yy_time desc LIMIT 10 OFFSET 0 
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG ==> Parameters: 2019-03-25(String), 2019-03-25(String)
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG <==      Total: 0
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from yy_manage where 1=1 and date_format(yy_date,'%Y-%m-%d') >= ? and ? >= date_format(yy_date,'%Y-%m-%d') 
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG ==> Parameters: 2019-03-25(String), 2019-03-25(String)
2019-3-25 10:18:29 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:18:32 http-nio-8081-exec-7 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-50' limit 1 
2019-3-25 10:18:32 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 10:18:32 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 10:18:32 http-nio-8081-exec-9 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 10:18:32 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 10:18:32 http-nio-8081-exec-9 DEBUG <==      Total: 7
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 10:18:32 http-nio-8081-exec-10 DEBUG <==      Total: 10
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG <==      Total: 3
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 10:18:37 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 10:18:39 http-nio-8081-exec-3 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 10:18:39 http-nio-8081-exec-3 DEBUG ==> Parameters: RK(String)
2019-3-25 10:18:39 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:18:39 http-nio-8081-exec-5 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 10:18:39 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 10:18:39 http-nio-8081-exec-5 DEBUG <==      Total: 7
2019-3-25 10:18:39 http-nio-8081-exec-6 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 10:18:39 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:39 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG <==      Total: 10
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 10:18:39 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG <==      Total: 0
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:39 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from stock_product where product_code = ? 
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==> Parameters: M004129(String)
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from items_temporary where order_id='RK000001' and code = 'M004129' limit 1 
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG <==      Total: 0
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==>  Preparing: INSERT INTO items_temporary ( id,order_id,batch,code,name,type_id,type,model,specifications,brand,inventory_num,inventory_cost,validity,retail_price,money,remark,unit,start_time,production_code,supplier,expiration_time ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==> Parameters: 38d6db7e-33d1-44b9-8076-3196a28ff30d(String), RK000001(String), RK000001(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), (String), 12(Integer), 0.0(Double), 2020-09-23 00:00:00.0(Timestamp), 0.0(Double), 0.0(Double),  (String), (String), 2019-03-11 00:00:00.0(Timestamp), 12(String), 12(String), 12(String)
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG <==    Updates: 1
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG ==>  Executing: SELECT LAST_INSERT_ID() 
2019-3-25 10:18:56 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG <==      Total: 10
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:56 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:56 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 10:18:56 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 10:18:56 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:56 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG ==>  Preparing: INSERT INTO stock_in_out ( in_out_id,in_out_code,in_out_time,creator_id,creator,money,num,in_obj,out_obj,type,state,clinic_id ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG ==> Parameters: ac43f96a-d44e-4205-9bc7-3d142ae2dd02(String), RK000001(String), 2019-03-25 10:18:58.404(Timestamp), 1(String), admin(String), 0.0(Double), 12(Integer), 总部(String), 服务商(String), 进货(String), 0.0(Double), 122(String)
2019-3-25 10:18:58 http-nio-8081-exec-5 DEBUG <==    Updates: 1
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String)
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG <==      Total: 4
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String)
2019-3-25 10:18:58 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG <==      Total: 4
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:04 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from ( select code inOutCode,name pName,model pModel,specifications pSpe,brand pBrand,sum(inventory_num) num,batch batchId,unit pUnit,remark, validity endTime,sum(money) money,retail_price price,inventory_cost cost,start_time,production_code,supplier,expiration_time from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity,remark,unit,start_time,production_code,supplier,expiration_time) t LIMIT 5 OFFSET 0 
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from ( select code from items_temporary where order_id=? group by code,name,batch,model,brand,specifications,inventory_cost,retail_price,validity ) t 
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:07 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: select * from stock_audit where in_out_id='ac43f96a-d44e-4205-9bc7-3d142ae2dd02' limit 1 
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG <==      Total: 0
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: INSERT INTO stock_audit ( audit_id,in_out_id,user_id,user_name,audit_time,remark,is_pass ) VALUES( ?,?,?,?,?,?,? ) 
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==> Parameters: bcefa5ca-10bd-4be3-8429-502a55e71b5b(String), ac43f96a-d44e-4205-9bc7-3d142ae2dd02(String), 1(String), admin(String), 2019-03-25 10:19:19.81(Timestamp), (String), 1(Integer)
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG <==    Updates: 1
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: select start_time,production_code,supplier,expiration_time,batch,code,name,type_id,type,model,specifications,brand,inventory_cost,validity,retail_price,remark,unit,sum(inventory_num) inventory_num, sum(money) money from items_temporary where order_id = ? group by start_time,production_code,supplier,expiration_time,batch,code,name,type_id,type,model,specifications,brand,inventory_cost,validity,retail_price,remark,unit 
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: INSERT INTO stock_in_out_de ( in_out_de_id,clinic_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,price,num,p_brand,money,remark,end_time,user_name,user_id,create_time,batch_id,operation_type,order_id,cost,allowance,p_unit,start_time,production_code,supplier,expiration_time ) VALUES( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,? ) 
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG ==> Parameters: 970ae870-80c0-49aa-8d5a-b42280eef904(String), 122(String), M004129(String), 达雅鼎牙胶尖(String), CD000260(String), 耗材(String), (String), 35#（绿）；2锥度(String), 0.0(Double), 12(Integer), (String), 0.0(Double),  (String), 2020-09-23 00:00:00.0(Timestamp), admin(String), 1(String), 2019-03-25 10:19:19.867(Timestamp), RK000001(String), 进货(String), RK000001(String), 0.0(Double), 12(Integer), (String), 2019-03-11 00:00:00.0(Timestamp), 12(String), 12(String), 12(String)
2019-3-25 10:19:19 http-nio-8081-exec-4 DEBUG <==    Updates: 1
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG <==      Total: 4
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:19 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from ( select in_out_de_id,in_out_code,clinic_id,p_name,type_id,p_type,p_model,p_spe,price,case when num < 0 then -num else num end num,p_brand,p_unit, case when money < 0 then -money else money end money,remark,end_time,user_name,user_id,create_time,batch_id,operation_type,order_id,cost,start_time,production_code,supplier,expiration_time from stock_in_out_de where order_id = ? order by in_out_code) t LIMIT 10 OFFSET 0 
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from stock_in_out_de where order_id = ? order by in_out_code 
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:24 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG <==      Total: 4
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:33 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from ( select in_out_de_id,in_out_code,clinic_id,p_name,type_id,p_type,p_model,p_spe,price,case when num < 0 then -num else num end num,p_brand,p_unit, case when money < 0 then -money else money end money,remark,end_time,user_name,user_id,create_time,batch_id,operation_type,order_id,cost,start_time,production_code,supplier,expiration_time from stock_in_out_de where order_id = ? order by in_out_code) t LIMIT 10 OFFSET 0 
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from stock_in_out_de where order_id = ? order by in_out_code 
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG ==> Parameters: RK000001(String)
2019-3-25 10:19:36 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: select * from stock_in_out where in_out_code = ? and clinic_id = ? 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: RK000001(String), 122(String)
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: UPDATE stock_in_out SET in_out_code = ?,in_out_time = ?,creator_id = ?,creator = ?,money = ?,num = ?,in_obj = ?,out_obj = ?,type = ?,state = ?,clinic_id = ? WHERE in_out_id = ? 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: RK000001(String), 2019-03-25 10:18:58.0(Timestamp), 1(String), admin(String), 0.0(Double), 12(Integer), 总部(String), 服务商(String), 进货(String), 1.0(Double), 122(String), ac43f96a-d44e-4205-9bc7-3d142ae2dd02(String)
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==    Updates: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: select order_id,batch_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,price,p_brand,cost,operation_type,p_unit,sum(num) num,sum(money) money from stock_in_out_de where order_id = ? and clinic_id = ? group by order_id,batch_id,in_out_code,p_name,type_id,p_type,p_model,p_spe,price,p_brand,cost,operation_type,p_unit 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: RK000001(String), 122(String)
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: select * from stock where clinic_id = ? and product_code = ? 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: select * from stock_product where product_code = 'M004129' limit 1 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==>  Preparing: UPDATE stock SET clinic_id = ?,product_type = ?,product_code = ?,product_name = ?,product_model = ?,product_spec = ?,product_brand = ?,product_unit = ?,type_id = ?,stock_num = ?,end_time = ?,sprice = ?,money = ? WHERE stock_id = ? 
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), 耗材(String), M004129(String), 达雅鼎牙胶尖(String), (String), 35#（绿）；2锥度(String), (String), (String), CD000260(String), 13(Integer), 2019-02-20 10:34:41.0(Timestamp), 0(String), 0.0(Double), 721b70d6-ed66-4f5b-a1fe-336496ad833a(String)
2019-3-25 10:19:43 http-nio-8081-exec-10 DEBUG <==    Updates: 1
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG <==      Total: 4
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:43 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 10:19:44 http-nio-8081-exec-2 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 10:19:44 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 10:19:44 http-nio-8081-exec-2 DEBUG <==      Total: 7
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 10:19:45 http-nio-8081-exec-3 DEBUG <==      Total: 10
2019-3-25 10:19:46 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0 AND (product_name LIKE '%M004129%' OR product_code LIKE '%M004129%')) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 10:19:46 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String)
2019-3-25 10:19:47 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:19:47 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 and (product_name like '%M004129%' or product_code like '%M004129%') ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 10:19:47 http-nio-8081-exec-5 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 10:19:47 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.* from ( select a.batch_id,a.in_out_code,a.p_name,a.p_type,a.p_model,a.p_spe,a.p_unit,a.p_brand,a.end_time,a.money,a.allowance,a.num,a.cost,a.in_out_de_id,a.remark,a.start_time,production_code,supplier,expiration_time from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M004129%') ) t order by t.end_time,t.in_out_code LIMIT 10 OFFSET 0 
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from ( select a.batch_id from stock_in_out_de a where a.clinic_id = ? and a.operation_type = '进货' and a.allowance >0 and (a.in_out_code = ? or a.p_name like '%M004129%') ) t 
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String), M004129(String)
2019-3-25 10:19:49 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG <==      Total: 4
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:34 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG <==      Total: 4
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:36 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG <==      Total: 4
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:37 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:20:37 http-nio-8081-exec-1 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 10:20:37 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 10:20:37 http-nio-8081-exec-1 DEBUG <==      Total: 7
2019-3-25 10:20:37 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 10:20:37 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:38 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 10:20:38 http-nio-8081-exec-2 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 10:20:38 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 10:20:38 http-nio-8081-exec-2 DEBUG <==      Total: 10
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG <==      Total: 4
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:38 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator_id,b.creator,b.num,b.money,b.clinic_id,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator_id,a.creator,a.num,a.money,a.state,a.clinic_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG <==      Total: 4
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) from ( select a.in_out_id from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:38 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:20:39 http-nio-8081-exec-5 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 10:20:39 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 10:20:39 http-nio-8081-exec-5 DEBUG <==      Total: 7
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String)
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 10:20:39 http-nio-8081-exec-6 DEBUG <==      Total: 10
2019-3-25 10:32:11 http-nio-8081-exec-9 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 10:32:11 http-nio-8081-exec-9 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 10:32:11 http-nio-8081-exec-9 DEBUG <==      Total: 26
2019-3-25 10:32:11 http-nio-8081-exec-8 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 10:32:11 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 10:32:11 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 10:32:11 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG <==      Total: 2
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 10:32:11 http-nio-8081-exec-1 DEBUG <==      Total: 2
2019-3-25 10:32:11 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 10:32:11 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 10:32:11 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 10:32:15 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 10:32:15 http-nio-8081-exec-4 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 10:32:15 http-nio-8081-exec-4 DEBUG <==      Total: 26
2019-3-25 10:32:15 http-nio-8081-exec-3 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 10:32:15 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 10:32:15 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 10:32:15 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 10:32:15 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 10:32:15 http-nio-8081-exec-7 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 10:32:15 http-nio-8081-exec-7 DEBUG ==> Parameters: 
2019-3-25 10:32:15 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 14:27:31 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 14:27:31 http-nio-8081-exec-10 DEBUG ==> Parameters: f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String)
2019-3-25 14:27:31 http-nio-8081-exec-10 DEBUG <==      Total: 0
2019-3-25 14:27:55 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 14:27:55 http-nio-8081-exec-2 DEBUG ==> Parameters: f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String)
2019-3-25 14:27:55 http-nio-8081-exec-2 DEBUG <==      Total: 0
2019-3-25 14:27:57 http-nio-8081-exec-3 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 14:27:57 http-nio-8081-exec-3 DEBUG ==> Parameters: f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String)
2019-3-25 14:27:57 http-nio-8081-exec-3 DEBUG <==      Total: 0
2019-3-25 14:27:58 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 14:27:58 http-nio-8081-exec-6 DEBUG ==> Parameters: f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String)
2019-3-25 14:27:58 http-nio-8081-exec-6 DEBUG <==      Total: 0
2019-3-25 16:26:40 http-nio-8081-exec-8 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 16:26:40 http-nio-8081-exec-8 DEBUG ==> Parameters: f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String), f60b4f46-1f4c-41dd-a12f-ff058bd3f965(String)
2019-3-25 16:26:40 http-nio-8081-exec-8 DEBUG <==      Total: 0
2019-3-25 16:27:57 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT * FROM sec_menu WHERE DELETED = 0 AND ENABLED=1 AND STANBY_ID1='2' AND ID_ IN ( SELECT MENU_ID from sec_menu_member WHERE USER_ID =? UNION SELECT MENU_ID FROM sec_menu_role WHERE ROLE_ID IN ( SELECT ROLE_ID FROM sec_role_member m LEFT JOIN sec_role r ON m.ROLE_ID = r.ID_ WHERE m.USER_ID =? AND r.STATE=1 ) UNION SELECT o.MENU_ID FROM sec_menu_org o LEFT JOIN sec_user u ON o.ORG_ID = u.ORG_ID LEFT JOIN sec_org so ON so.ID_ = u.ORG_ID WHERE u.ID_ = ? AND so.STATE=1 ) ORDER BY sort 
2019-3-25 16:27:57 http-nio-8081-exec-10 DEBUG ==> Parameters: 1(String), 1(String), 1(String)
2019-3-25 16:27:57 http-nio-8081-exec-10 DEBUG <==      Total: 26
2019-3-25 16:27:57 http-nio-8081-exec-1 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-35' limit 1 
2019-3-25 16:27:57 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 16:27:57 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG ==>  Preparing: select count(*) from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') 
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG ==>  Preparing: select sum(sf_money) from cust_sfjl where date_format(create_time,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') and sf_stat = '已收费' 
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 16:27:58 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') = date_format(now(),'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type ='门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG ==>  Preparing: select b.ORG_NAME,case when a.num is null then 0 else a.num end NUM from sec_org b left join (select yy_clinic,count(*) num from yy_manage where date_format(yy_date,'%Y-%m-%d') >= date_format(?,'%Y-%m-%d') and date_format(?,'%Y-%m-%d') >= date_format(yy_date,'%Y-%m-%d') group by yy_clinic) a on a.yy_clinic = b.ID_ where b.type = '门诊' and b.DELETED = 0 order by a.num desc 
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:27:58 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 16:27:58 http-nio-8081-exec-3 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.* FROM (SELECT a.in_out_id, a.in_out_code, a.in_out_time, a.type, a.creator_id, a.creator, a.num, a.money, a.state, a.clinic_id, b.org_name FROM stock_in_out a, sec_org b WHERE a.clinic_id = b.id_ AND a.type != '领用' AND a.type != '退领') t) b LEFT JOIN stock_audit c ON b.in_out_id = c.in_out_id WHERE c.is_pass IS NULL OR b.state = 0.5 
2019-3-25 16:27:58 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 16:27:58 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:28:01 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from sec_menu where ID_='062af654-9c05-4112-b8d8-50' limit 1 
2019-3-25 16:28:01 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 16:28:01 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:28:01 http-nio-8081-exec-6 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 16:28:01 http-nio-8081-exec-6 DEBUG ==> Parameters: 
2019-3-25 16:28:01 http-nio-8081-exec-6 DEBUG <==      Total: 7
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 16:28:02 http-nio-8081-exec-7 DEBUG <==      Total: 10
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG <==      Total: 4
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:04 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 16:28:06 http-nio-8081-exec-9 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 16:28:06 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 16:28:06 http-nio-8081-exec-9 DEBUG <==      Total: 7
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT t.stock_id, t.clinic_id, t.type_id, t.product_type, t.product_code, t.product_unit, t.product_name, t.product_model, t.product_spec, t.product_brand, t.stock_num, t.stock_num * t.sprice combined, t.end_time, t.sprice, t.money, t.remark, CASE WHEN t.allowance IS NOT NULL THEN t.allowance ELSE 0 END allowance FROM (SELECT stock_id, clinic_id, type_id, product_type, product_code, product_unit, product_name, product_model, product_spec, product_brand, stock_num, end_time, sprice, money, remark, (SELECT sum(allowance) FROM stock_in_out_de WHERE clinic_id = stock.clinic_id AND in_out_code = stock.product_code AND now() > end_time) allowance FROM stock WHERE clinic_id = ? AND stock_num > 0) t) t LEFT JOIN stock_warn b ON b.clinic_id = t.clinic_id AND t.product_code = b.warn_pro_id 
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.*,b.warn_num from ( select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit, t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined, t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from ( select stock_id,clinic_id,type_id,product_type,product_code,product_unit, product_name,product_model,product_spec,product_brand,stock_num, end_time,sprice,money,remark, (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance from stock where clinic_id = ? and stock_num > 0 ) t order by t.product_code ) t left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code limit ?,? 
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG ==> Parameters: 122(String), 0(Integer), 10(Integer)
2019-3-25 16:28:06 http-nio-8081-exec-10 DEBUG <==      Total: 10
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG ==>  Preparing: select b.in_out_id,b.in_out_code,b.in_out_time,b.type,b.creator,b.num,b.money,c.user_name,c.audit_time,c.remark ,case when b.state = 1 then '已完成' when c.is_pass is not null and c.is_pass = 1 then '已通过' when c.is_pass is not null and c.is_pass = 0 then '未通过' else '未审核' end state from ( select t.* from ( select a.in_out_id,a.in_out_code,a.in_out_time,a.type,a.creator,a.num,a.money,a.state from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') order by a.state,a.in_out_time desc) t LIMIT 10 OFFSET 0 ) b left join stock_audit c on b.in_out_id = c.in_out_id order by b.in_out_time desc,b.state 
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG <==      Total: 4
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) from( select a.in_out_code from stock_in_out a where a.clinic_id = ? and (a.type='进货' or a.type='退货') ) t 
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG ==> Parameters: 122(String)
2019-3-25 16:28:11 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 16:28:12 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT f_getCode(?) as code 
2019-3-25 16:28:12 http-nio-8081-exec-2 DEBUG ==> Parameters: RK(String)
2019-3-25 16:28:12 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:28:13 http-nio-8081-exec-4 DEBUG ==>  Preparing: select type_id typeId, code, name, parent_id parentId,case when parent_id = '0' or parent_id = 'CD0001' then true else false end open from stock_product_type order by create_time 
2019-3-25 16:28:13 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:28:13 http-nio-8081-exec-4 DEBUG <==      Total: 7
2019-3-25 16:28:13 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(inventory_num) numSum, sum(money) moneySum from items_temporary where order_id = ? 
2019-3-25 16:28:13 http-nio-8081-exec-3 DEBUG ==> Parameters: RK000002(String)
2019-3-25 16:28:13 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG ==>  Preparing: select * from (select * from stock_product where 1=1 ) t LIMIT 10 OFFSET 0 
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG <==      Total: 10
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG ==>  Preparing: select * from ( select * from items_temporary where order_id = ? ) t LIMIT 10 OFFSET 0 
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000002(String)
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG <==      Total: 0
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) from stock_product where 1=1 
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG ==> Parameters: 
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) from items_temporary where order_id = ? 
2019-3-25 16:28:13 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG ==> Parameters: RK000002(String)
2019-3-25 16:28:13 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 16:32:16 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from sec_menu where ID_='chai-wu-guan-li' limit 1 
2019-3-25 16:32:16 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 16:32:16 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG <==      Total: 2
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG ==> Parameters: 
2019-3-25 16:32:16 http-nio-8081-exec-1 DEBUG <==      Total: 5
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:32:16 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:16 http-nio-8081-exec-2 DEBUG <==      Total: 10
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:32:19 http-nio-8081-exec-4 DEBUG <==      Total: 5
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:19 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, stock_product b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.product_code AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, charge_project b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.id_ AND c.cust_clinic = b.org_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:19 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 16:32:19 http-nio-8081-exec-5 DEBUG <==      Total: 9
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice FROM stock WHERE clinic_id = ?) a LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' GROUP BY in_out_code, clinic_id) b ON b.in_out_code = a.product_code AND a.clinic_id = b.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' AND clinic_id != ? GROUP BY in_out_code) c ON c.in_out_code = a.product_code LEFT JOIN stock_month d ON d.month = ? AND a.clinic_id = d.clinic_id AND a.product_code = d.product_code LEFT JOIN stock_month e ON e.month = ? AND a.clinic_id = e.clinic_id AND a.product_code = e.product_code LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' GROUP BY in_out_code, clinic_id) f ON f.in_out_code = a.product_code AND a.clinic_id = f.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' AND clinic_id != ? GROUP BY in_out_code) g ON g.in_out_code = a.product_code 
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String)
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG ==>  Preparing: select a.*,case when b.num is null then 0 when f.num is null then b.num else b.num - f.num end num, case when b.money is null then 0 when f.money is null then b.money else b.money - f.money end money, case when c.useNum is null then 0 when g.useNum is null then c.useNum else c.useNum - g.useNum end useNum, case when c.useNum is null then 0 when g.useNum is null then a.sprice * c.useNum else a.sprice * (c.useNum - g.useNum) end useMoney, case when d.stock_num is null then 0 else d.stock_num end beginNum,case when d.sprice is null then 0 else d.sprice end beginSprice,case when d.sprice is null then 0 else e.sprice * e.stock_num end beginSum, case when e.stock_num is null then 0 else e.stock_num end endNum,case when e.sprice is null then 0 else e.sprice end endSprice,case when e.sprice is null then 0 else e.sprice * e.stock_num end endSum from ( select product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice from stock where clinic_id = ? ) a left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' group by in_out_code,clinic_id) b on b.in_out_code = a.product_code and a.clinic_id = b.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' and clinic_id != ? group by in_out_code) c on c.in_out_code = a.product_code left join stock_month d on d.month = ? and a.clinic_id = d.clinic_id and a.product_code = d.product_code left join stock_month e on e.month = ? and a.clinic_id = e.clinic_id and a.product_code = e.product_code left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' group by in_out_code,clinic_id) f on f.in_out_code = a.product_code and a.clinic_id = f.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' and clinic_id != ? group by in_out_code) g on g.in_out_code = a.product_code order by a.product_code limit ?,? 
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String), 0(Integer), 10(Integer)
2019-3-25 16:32:19 http-nio-8081-exec-7 DEBUG <==      Total: 10
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG ==>  Preparing: select sum(t.money) from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG <==      Total: 2
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG ==> Parameters: 
2019-3-25 16:32:22 http-nio-8081-exec-8 DEBUG <==      Total: 5
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG ==>  Preparing: select sum(t.money) from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:22 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, stock_product b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.product_code AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, charge_project b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.id_ AND c.cust_clinic = b.org_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:22 http-nio-8081-exec-10 DEBUG <==      Total: 9
2019-3-25 16:32:22 http-nio-8081-exec-1 DEBUG <==      Total: 2
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice FROM stock WHERE clinic_id = ?) a LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' GROUP BY in_out_code, clinic_id) b ON b.in_out_code = a.product_code AND a.clinic_id = b.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' AND clinic_id != ? GROUP BY in_out_code) c ON c.in_out_code = a.product_code LEFT JOIN stock_month d ON d.month = ? AND a.clinic_id = d.clinic_id AND a.product_code = d.product_code LEFT JOIN stock_month e ON e.month = ? AND a.clinic_id = e.clinic_id AND a.product_code = e.product_code LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' GROUP BY in_out_code, clinic_id) f ON f.in_out_code = a.product_code AND a.clinic_id = f.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' AND clinic_id != ? GROUP BY in_out_code) g ON g.in_out_code = a.product_code 
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String)
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG ==>  Preparing: select a.*,case when b.num is null then 0 when f.num is null then b.num else b.num - f.num end num, case when b.money is null then 0 when f.money is null then b.money else b.money - f.money end money, case when c.useNum is null then 0 when g.useNum is null then c.useNum else c.useNum - g.useNum end useNum, case when c.useNum is null then 0 when g.useNum is null then a.sprice * c.useNum else a.sprice * (c.useNum - g.useNum) end useMoney, case when d.stock_num is null then 0 else d.stock_num end beginNum,case when d.sprice is null then 0 else d.sprice end beginSprice,case when d.sprice is null then 0 else e.sprice * e.stock_num end beginSum, case when e.stock_num is null then 0 else e.stock_num end endNum,case when e.sprice is null then 0 else e.sprice end endSprice,case when e.sprice is null then 0 else e.sprice * e.stock_num end endSum from ( select product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice from stock where clinic_id = ? ) a left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' group by in_out_code,clinic_id) b on b.in_out_code = a.product_code and a.clinic_id = b.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' and clinic_id != ? group by in_out_code) c on c.in_out_code = a.product_code left join stock_month d on d.month = ? and a.clinic_id = d.clinic_id and a.product_code = d.product_code left join stock_month e on e.month = ? and a.clinic_id = e.clinic_id and a.product_code = e.product_code left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' group by in_out_code,clinic_id) f on f.in_out_code = a.product_code and a.clinic_id = f.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' and clinic_id != ? group by in_out_code) g on g.in_out_code = a.product_code order by a.product_code limit ?,? 
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String), 0(Integer), 10(Integer)
2019-3-25 16:32:23 http-nio-8081-exec-2 DEBUG <==      Total: 10
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG <==      Total: 2
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 16:32:24 http-nio-8081-exec-4 DEBUG <==      Total: 5
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:24 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, stock_product b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.product_code AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, charge_project b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.id_ AND c.cust_clinic = b.org_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:32:24 http-nio-8081-exec-5 DEBUG <==      Total: 9
2019-3-25 16:32:24 http-nio-8081-exec-6 DEBUG <==      Total: 2
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice FROM stock WHERE clinic_id = ?) a LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' GROUP BY in_out_code, clinic_id) b ON b.in_out_code = a.product_code AND a.clinic_id = b.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '进货' AND clinic_id != ? GROUP BY in_out_code) c ON c.in_out_code = a.product_code LEFT JOIN stock_month d ON d.month = ? AND a.clinic_id = d.clinic_id AND a.product_code = d.product_code LEFT JOIN stock_month e ON e.month = ? AND a.clinic_id = e.clinic_id AND a.product_code = e.product_code LEFT JOIN (SELECT in_out_code, clinic_id, sum(num) num, sum(money) money FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' GROUP BY in_out_code, clinic_id) f ON f.in_out_code = a.product_code AND a.clinic_id = f.clinic_id LEFT JOIN (SELECT in_out_code, sum(num) useNum FROM stock_in_out_de WHERE date_format(create_time, '%Y%m') = ? AND operation_type = '退货' AND clinic_id != ? GROUP BY in_out_code) g ON g.in_out_code = a.product_code 
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String)
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG ==>  Preparing: select a.*,case when b.num is null then 0 when f.num is null then b.num else b.num - f.num end num, case when b.money is null then 0 when f.money is null then b.money else b.money - f.money end money, case when c.useNum is null then 0 when g.useNum is null then c.useNum else c.useNum - g.useNum end useNum, case when c.useNum is null then 0 when g.useNum is null then a.sprice * c.useNum else a.sprice * (c.useNum - g.useNum) end useMoney, case when d.stock_num is null then 0 else d.stock_num end beginNum,case when d.sprice is null then 0 else d.sprice end beginSprice,case when d.sprice is null then 0 else e.sprice * e.stock_num end beginSum, case when e.stock_num is null then 0 else e.stock_num end endNum,case when e.sprice is null then 0 else e.sprice end endSprice,case when e.sprice is null then 0 else e.sprice * e.stock_num end endSum from ( select product_code, product_name, product_brand, product_spec, product_unit, product_type, clinic_id, sprice from stock where clinic_id = ? ) a left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' group by in_out_code,clinic_id) b on b.in_out_code = a.product_code and a.clinic_id = b.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '进货' and clinic_id != ? group by in_out_code) c on c.in_out_code = a.product_code left join stock_month d on d.month = ? and a.clinic_id = d.clinic_id and a.product_code = d.product_code left join stock_month e on e.month = ? and a.clinic_id = e.clinic_id and a.product_code = e.product_code left join (select in_out_code,clinic_id,sum(num) num,sum(money) money from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' group by in_out_code,clinic_id) f on f.in_out_code = a.product_code and a.clinic_id = f.clinic_id left join (select in_out_code,sum(num) useNum from stock_in_out_de where date_format(create_time,'%Y%m') = ? and operation_type = '退货' and clinic_id != ? group by in_out_code) g on g.in_out_code = a.product_code order by a.product_code limit ?,? 
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG ==> Parameters: 122(String), 201902(String), 201902(String), 122(String), 201902(String), 201903(String), 201902(String), 201902(String), 122(String), 0(Integer), 10(Integer)
2019-3-25 16:53:16 http-nio-8081-exec-9 DEBUG <==      Total: 10
2019-3-25 16:53:16 http-nio-8081-exec-9 ERROR 接口 [/stock/month/findStockMonth] 出现异常，方法：com.yidusoft.project.system.controller.StockMonthController.list，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:182)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yidusoft.configurer.CorsFilter.doFilter(CorsFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 72 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG <==      Total: 2
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG ==> Parameters: 
2019-3-25 16:53:16 http-nio-8081-exec-10 DEBUG <==      Total: 5
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG ==>  Preparing: select sum(t.money) from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG ==>  Preparing: select sum(t.money) from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, stock_product b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.product_code AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, charge_project b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.id_ AND c.cust_clinic = b.org_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 16:53:16 http-nio-8081-exec-2 DEBUG <==      Total: 2
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 16:53:16 http-nio-8081-exec-4 DEBUG <==      Total: 9
2019-3-25 16:53:16 http-nio-8081-exec-2 ERROR 接口 [/cust/sfjl/findDrugRevenue] 出现异常，方法：com.yidusoft.project.system.controller.CustSfjlController.findDrugRevenue，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:182)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yidusoft.configurer.CorsFilter.doFilter(CorsFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 72 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-4 ERROR 接口 [/cust/sfjl/findProjectRevenue] 出现异常，方法：com.yidusoft.project.system.controller.CustSfjlController.findProjectRevenue，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:182)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.yidusoft.configurer.CorsFilter.doFilter(CorsFilter.java:41)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:84)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 72 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-2 ERROR 接口 [/cust/sfjl/findDrugRevenue] 出现异常，方法：org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:218)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 38 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-9 ERROR 接口 [/stock/month/findStockMonth] 出现异常，方法：org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:218)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 38 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-4 ERROR 接口 [/cust/sfjl/findProjectRevenue] 出现异常，方法：org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error，异常摘要：java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter.write(FastJsonHttpMessageConverter.java:218)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:218)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:881)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:160)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:285)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 38 common frames omitted
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG <==      Total: 2
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG ==> Parameters: 
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-3 DEBUG <==      Total: 5
2019-3-25 16:53:16 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 16:53:16 http-nio-8081-exec-6 DEBUG <==      Total: 10
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:17 http-nio-8081-exec-10 DEBUG <==      Total: 10
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:17 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:18 http-nio-8081-exec-4 DEBUG <==      Total: 10
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-9 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:18 http-nio-8081-exec-2 DEBUG <==      Total: 10
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-5 DEBUG <==      Total: 10
2019-3-25 17:03:18 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-7 DEBUG <==      Total: 10
2019-3-25 17:03:18 http-nio-8081-exec-8 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.* FROM cust_sfjl s, customer c WHERE s.cust_id = c.cust_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d')) t LEFT JOIN sec_user b ON t.cashier = b.ID_ 
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money) is null then 0 else sum(s.sf_money) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG ==>  Preparing: select t.*,b.user_name from ( select s.* from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t left join sec_user b on t.cashier = b.ID_ order by t.create_time desc limit ?,? 
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 17:03:18 http-nio-8081-exec-1 DEBUG <==      Total: 10
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG ==>  Preparing: select count(*) count,case when sum(s.sf_money - s.arrears) is null then 0 else sum(s.sf_money - s.arrears) end money from cust_sfjl s,customer c where s.cust_id=c.cust_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') 
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG ==> Parameters: 2019-01-01(String), 2019-12-31(String)
2019-3-25 17:03:18 http-nio-8081-exec-10 DEBUG <==      Total: 1
2019-3-25 17:03:22 http-nio-8081-exec-4 DEBUG ==>  Preparing: select * from cust_sfjl_de d where d.sfjl_id='e2b5dc37-6768-4f52-bacc-e1b8b254f86b' 
2019-3-25 17:03:22 http-nio-8081-exec-4 DEBUG ==> Parameters: 
2019-3-25 17:03:22 http-nio-8081-exec-4 DEBUG <==      Total: 4
2019-3-25 17:03:30 http-nio-8081-exec-9 DEBUG ==>  Preparing: select * from cust_sfjl_de d where d.sfjl_id='4c7ce6e9-eb24-4af1-b59d-4cf68d6656bb' 
2019-3-25 17:03:30 http-nio-8081-exec-9 DEBUG ==> Parameters: 
2019-3-25 17:03:30 http-nio-8081-exec-9 DEBUG <==      Total: 4
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG ==>  Preparing: select ID_ id ,ORG_NAME name from sec_org where DELETED = 0 and state = 1 and type='门诊' 
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG <==      Total: 2
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG ==>  Preparing: select ID_ id, USER_NAME name,ORG_ID orgId from sec_user where DELETED = 0 and STANDBY1 = '医生' 
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG ==> Parameters: 
2019-3-25 17:03:37 http-nio-8081-exec-2 DEBUG <==      Total: 5
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG ==>  Preparing: select sum(t.money) from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,a.money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') ) t 
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 17:03:37 http-nio-8081-exec-3 DEBUG <==      Total: 1
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, stock_product b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.product_code AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG <==      Total: 1
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG ==>  Preparing: SELECT count(0) FROM (SELECT s.doctor_id, c.cust_clinic, a.code, a.name, a.price, sum(a.num) num, sum(a.money) money FROM cust_sfjl s, customer c, cust_sfjl_de a, charge_project b WHERE s.cust_id = c.cust_id AND s.sf_id = a.sfjl_id AND a.code = b.id_ AND c.cust_clinic = b.org_id AND s.deleted = 0 AND date_format(s.create_time, '%Y-%m-%d') >= ? AND ? >= date_format(s.create_time, '%Y-%m-%d') GROUP BY s.doctor_id, c.cust_clinic, a.code, a.name, a.price) t, sec_user e, sec_org f WHERE t.doctor_id = e.ID_ AND t.cust_clinic = f.ID_ 
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String)
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from (select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,stock_product b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.product_code and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG <==      Total: 1
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG ==>  Preparing: select t.*,e.user_name,f.org_name from ( select s.doctor_id,c.cust_clinic,a.code,a.name,a.price,sum(a.num) num,sum(a.money) money from cust_sfjl s,customer c,cust_sfjl_de a,charge_project b where s.cust_id=c.cust_id and s.sf_id = a.sfjl_id and a.code = b.id_ and c.cust_clinic=b.org_id and s.deleted=0 and date_format(s.create_time,'%Y-%m-%d') >= ? and ? >= date_format(s.create_time,'%Y-%m-%d') group by s.doctor_id,c.cust_clinic,a.code,a.name,a.price) t,sec_user e,sec_org f where t.doctor_id = e.ID_ and t.cust_clinic = f.ID_ limit ?,? 
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG ==> Parameters: 2019-03-01(String), 2019-03-31(String), 0(Integer), 10(Integer)
2019-3-25 17:03:37 http-nio-8081-exec-5 DEBUG <==      Total: 9
2019-3-25 17:03:37 http-nio-8081-exec-6 DEBUG <==      Total: 2
