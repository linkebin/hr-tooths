<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidusoft.project.system.dao.StockMapper">
  <resultMap id="BaseResultMap" type="com.yidusoft.project.system.domain.Stock">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="stock_id" jdbcType="VARCHAR" property="stockId" />
    <result column="clinic_id" jdbcType="VARCHAR" property="clinicId" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
    <result column="product_type" jdbcType="VARCHAR" property="productType" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_model" jdbcType="VARCHAR" property="productModel" />
    <result column="product_spec" jdbcType="VARCHAR" property="productSpec" />
    <result column="product_brand" jdbcType="VARCHAR" property="productBrand" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="sprice" jdbcType="VARCHAR" property="sprice" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="product_unit" jdbcType="VARCHAR" property="productUnit" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <select id="findStock" parameterType="String" resultMap="BaseResultMap">
    select * from stock where clinic_id = #{clinic}
     and product_code = #{code}
  </select>

  <select id="findUseStock" parameterType="String" resultType="java.util.Map">
    select a.product_code,
      a.product_name,
      a.product_brand,
      a.product_spec,
      a.product_unit,
      a.product_type,
      b.time
    from stock a left join
    (select in_out_code,max(create_time) time
        from stock_in_out_de
     where clinic_id != #{clinic}
          and operation_type = '进货'
        group by in_out_code)
    b on a.product_code = b.in_out_code where a.clinic_id = #{clinic}
    <if test="time!=null and time!=''">
      and (#{time} >= date_format(b.time,'%Y-%m-%d') or b.time is null)
    </if>
    <if test="code!=null and code!=''">
      and (a.product_code = #{code} or a.product_name like '%${code}%')
    </if>
    <if test="typeId!=null and typeId!=''">
      and a.type_id = #{typeId}
    </if>
    order by product_code
  </select>

  <select id="getStock" parameterType="String" resultType="java.util.Map">
    select t.*,b.warn_num from (
    select t.stock_id,t.clinic_id,t.type_id,t.product_type,t.product_code,t.product_unit,
    t.product_name,t.product_model,t.product_spec,t.product_brand,t.stock_num,t.stock_num*t.sprice combined,
    t.end_time,t.sprice,t.money,t.remark,case when t.allowance is not null then t.allowance else 0 end allowance from (
    select stock_id,clinic_id,type_id,product_type,product_code,product_unit,
    product_name,product_model,product_spec,product_brand,stock_num,
    end_time,sprice,money,remark,
    (select sum(allowance) from stock_in_out_de where clinic_id = stock.clinic_id and in_out_code = stock.product_code and now()>end_time) allowance
    from stock where clinic_id = #{clinic}
    and stock_num   >  0
    <if test="typeId!=null and typeId!=''">
      and type_id = #{typeId}
    </if>
    <if test="name!=null and name!=''">
      and (product_name like '%${name}%' or product_code like '%${name}%')
    </if>
    <if test="productBrand!=null and productBrand!=''">
      and product_brand like '%${productBrand}%'
    </if>
    ) t order by t.product_code ) t
    left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id order by product_code
  </select>

  <select id="getStockAll" parameterType="String" resultType="java.util.Map">
    select t.*,b.warn_num from (
    select * from stock where stock_num>0 and clinic_id = #{clinic}
    <if test="typeId!=null and typeId!=''">
      and type_id = #{typeId}
    </if>
    <if test="name!=null and name!=''">
      and (product_name like '%${name}%' or product_code like '%${name}%')
    </if>
    order by product_code) t
    left join stock_warn b on b.clinic_id = t.clinic_id and t.product_code = b.warn_pro_id
  </select>

  <select id="getStockCount" parameterType="String" resultType="int">
    select count(*) from stock where clinic_id = #{clinic}
    <if test="typeId!=null and typeId!=''">
      and type_id = #{typeId}
    </if>
    <if test="name!=null and name!=''">
      and (product_name like '%${name}%' or product_code like '%${name}%')
    </if>
  </select>

  <select id="findStockNum" parameterType="String" resultType="int">
    select sum(stock_num) stock_num from stock where product_code = #{code} and clinic_id = #{clinic} group by product_code
  </select>

</mapper>